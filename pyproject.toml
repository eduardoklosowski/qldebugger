[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "qldebugger"
version = "0.1.0"
description = "Utility to debug AWS lambdas with SQS messages"
license = "MIT"
authors = ["Eduardo Klosowski <eduardo_klosowski@yahoo.com>"]
readme = "README.md"
repository = "https://github.com/eduardoklosowski/qldebugger"
documentation = "http://qldebugger.readthedocs.io/"
classifiers = [
  "Development Status :: 1 - Planning",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Software Development :: Debuggers",
  "Topic :: System :: Emulators",
  "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.8"
boto3 = "^1.24"
click = "^8.1"
pydantic = "^1.9"
tomli = "^2.0"

[tool.poetry.dev-dependencies]
aws-lambda-typing = "^2.13"
boto3-stubs = {version = "^1.24", extras = ["sqs", "sts"]}
isort = "^5.10"
autopep8 = "^1.7"
flake8 = "^5.0"
mypy = "^0.971"
bandit = "^1.7"
pytest = "^7.1"
pytest-cov = "^3.0"
pytest-xdist = "^2.5"
mkdocs = "^1.3"
moto = {version = "^4.0", extras = ["server"]}

[tool.poetry.scripts]
qldebugger = 'qldebugger.cli:cli'

[tool.isort]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
line_length = 119
multi_line_output = "HANGING_INDENT"
indent = "    "
float_to_top = true
src_paths = [
  "qldebugger",
  "tests",
]

[tool.autopep8]
recursive = true
aggressive = 3

[tool.mypy]
plugins = [
  "pydantic.mypy",
]
files = [
  "qldebugger/**/*.py",
  "tests/**/*.py",
]
follow_imports = "normal"
warn_unused_configs = true
show_column_numbers = true
show_error_codes = true

disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
implicit_reexport = false
strict_equality = true

[tool.pytest.ini_options]
addopts = "--strict-config --cov-report=term-missing --no-cov-on-fail --cov=qldebugger"
testpaths = [
  "tests",
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if (typing\\.)?TYPE_CHECKING:",
  "@overload",
]
