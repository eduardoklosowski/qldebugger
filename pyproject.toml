[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "qldebugger"
version = "0.0.0"
description = "Utility to debug AWS lambdas with SQS messages"
authors = ["Eduardo Klosowski <eduardo_klosowski@yahoo.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/eduardoklosowski/qldebugger"
documentation = "http://qldebugger.readthedocs.io/"
classifiers = [
  "Development Status :: 1 - Planning",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Debuggers",
  "Topic :: System :: Emulators",
  "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.8"
boto3 = "^1.24"
click = "^8.1"
pydantic = "^1.9"
tomli = "^2.0"

[tool.poetry.group.type.dependencies]
aws-lambda-typing = "^2.13"
boto3-stubs = {version = "^1.24", extras = ["sqs", "sts"]}

[tool.poetry.group.dev.dependencies]
isort = "^5.10"
pycodestyle = "^2.9"
autopep8 = "^1.7"
flake8 = "^5.0"
ruff = "0.0.270"
mypy = "^0.971"
bandit = "^1.7"
pytest = "^7.1"
pytest-cov = "^3.0"
pytest-xdist = "^2.5"
moto = {version = "^4.0", extras = ["server"]}

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.3"

[tool.poetry.scripts]
qldebugger = "qldebugger.cli:cli"

[tool.isort]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
line_length = 119
multi_line_output = "HANGING_INDENT"
indent = "    "
float_to_top = true
src_paths = ["qldebugger", "tests"]

[tool.autopep8]
recursive = true
aggressive = 3

[tool.ruff]
target-version = "py38"
line-length = 119
select = ["ALL"]
ignore = ["D", "ANN101", "ANN102", "ANN401", "FBT", "EM", "ARG", "PGH003", "PLC0414", "PLR0913", "PLR2004", "PLW0603", "TRY"]

[tool.ruff.per-file-ignores]
"qldebugger/example/*.py" = ["T20"]
"tests/*.py" = ["S101", "S311"]

[tool.ruff.pep8-naming]
classmethod-decorators = ["pydantic.validator"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"

[tool.mypy]
follow_imports = "normal"
warn_unused_configs = true
show_column_numbers = true
show_error_codes = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
implicit_reexport = false
strict_equality = true
plugins = ["pydantic.mypy"]
files = ["qldebugger/**/*.py", "tests/**/*.py"]

[tool.pytest.ini_options]
addopts = "--strict-config --cov-report=term-missing --no-cov-on-fail --cov=qldebugger"
testpaths = ["tests"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if (typing\\.)?TYPE_CHECKING:",
  "@overload",
]
